var http = require('http');
var https = require('https');
var url = require('url');

module.exports = function(botenv) {

    var simplehttp = {};
    botenv.botcontext.http = http;
    botenv.botcontext.https = https;
    simplehttp.parseURL = function parseURL(href) {
        return url.parse(href);
    };

    simplehttp.makeGet = function makeGet(geturl, headers, callback) {
        var options = simplehttp.parseURL(geturl);
        var headerJson = {};
        if (headers) {
            headerJson = headers;
        }
        options.headers = headerJson;
        simplehttp.httpRequest(options, callback);
    };

    simplehttp.makePost = function makePost(geturl, formParams, headers, callback) {
        var options = simplehttp.parseURL(geturl);
        var headerJson = {
            'Content-Type': 'application/x-www-form-urlencoded'
        };
        if (headers) {
            headerJson = headers;
        }
        if(!headerJson.hasOwnProperty('Content-Length')){
            headerJson["Content-Length"]=Buffer.byteLength(formParams);
        }
        options.headers = headerJson;
        options.method = 'POST';
        options.body = formParams;
        simplehttp.httpRequest(options, callback);
    };

    simplehttp.httpRequest = function httpRequest(options, done) {
        console.log('options for httpRequest : ' + JSON.stringify(options));
        var callback = function(response) {
            var body = '';
            response.on('data', function(d) {
                body += d;
            });
            response.on('end', function() {
                var event1 = botenv.botcontext.createEventCopy();
                event1.type = "httprequest";
                event1.geturl = options.href;
                event1.success = true;
                event1.getresp = body;
                event1.options = options;
                event1.statusCode = response.statusCode;
                event1.headers = response.headers;
                console.log('Response from HttpCall : ' + JSON.stringify(event1.getresp));
                if (done) {
                    done(botenv.botcontext, event1);
                } else {
                    botenv.handler.onHttpResponse(botenv.botcontext, event1);
                }
            });
            response.on('error', function(e) {
                var event1 = botenv.botcontext.createEventCopy();
                event1.type = "httprequest";
                event1.success = false;
                event1.geturl = options.href;
                event1.getresp = JSON.stringify(e);
                console.log('Error from HttpCall : ' + JSON.stringify(e));
                if (done) {
                    done(botenv.botcontext, event1);
                } else {
                    botenv.handler.onHttpResponse(botenv.botcontext, event1);
                }
            });
        }
        var request;
        if ('https:' == options.protocol) {
            request = https.request(options, callback)
        } else {
            request = http.request(options, callback)
        }
        if (options.body)
            request.write(options.body);
        request.end();
    };

    return simplehttp;
}
