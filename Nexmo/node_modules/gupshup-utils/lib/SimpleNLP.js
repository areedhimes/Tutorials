var utils = require('./BotUtils');
module.exports = function(botcontext) {

    var nlp = {};
    nlp.sendMessageToWit = function(options) {
        var message = options.message; // Mandatory
        var witContext = options.witContext; // optinal
        if (!witContext) {
            witContext = {};
        }
        var callback = options.callback;
        if (!(callback && typeof callback == 'function')) {
            return botcontext.sendResponse("ERROR : type of options.callback should be function and its Mandatory");
        }
        var witToken = options.witToken;

        if (!witToken) {
            if (!botcontext.simpledb.botleveldata.config || !botcontext.simpledb.botleveldata.config.witToken) {
                return botcontext.sendResponse("ERROR : witToken not set. Please set witToken to options.witToken or context.simpledb.botleveldata.config.witToken");
            } else {
                witToken = botcontext.simpledb.botleveldata.config.witToken;
            }
        }
        var witurl = "https://api.wit.ai/message?q=" + encodeURIComponent(message) + "&context=" + encodeURIComponent(JSON.stringify(witContext));
        var headers = { "Authorization": "Bearer " + witToken };
        botcontext.simplehttp.makeGet(witurl, headers, function(context, event) {
            if (event.getresp) {
                var res = utils.parseJson(event.getresp);
                callback(res);
            } else {
                callback({})
            }
        });
    }

    nlp.sendMessageToApiAi = function(options) {
        var message = options.message; // Mandatory
        var sessionId = options.sessionId || ""; // optinal
        var callback = options.callback;
        if (!(callback && typeof callback == 'function')) {
            return botcontext.sendResponse("ERROR : type of options.callback should be function and its Mandatory");
        }
        var nlpToken = options.nlpToken;

        if (!nlpToken) {
            if (!botcontext.simpledb.botleveldata.config || !botcontext.simpledb.botleveldata.config.nlpToken) {
                return botcontext.sendResponse("ERROR : token not set. Please set Api.ai Token to options.nlpToken or context.simpledb.botleveldata.config.nlpToken");
            } else {
                nlpToken = botcontext.simpledb.botleveldata.config.nlpToken;
            }
        }
        var query = '?v=20150910&query=' + encodeURIComponent(message) + '&sessionId=' + sessionId + '&timezone=Asia/Calcutta&lang=en    '
        var apiurl = "https://api.api.ai/api/query" + query;
        var headers = { "Authorization": "Bearer " + nlpToken };
        botcontext.simplehttp.makeGet(apiurl, headers, function(context, event) {
            if (event.getresp) {
                callback(utils.parseJson(event.getresp));
            } else {
                callback({})
            }
        });
    }

    nlp.sendMessageToLuis = function(options) {
        var message = options.message; // Mandatory

        var callback = options.callback;
        if (!(callback && typeof callback == 'function')) {
            return botcontext.sendResponse("ERROR : type of options.callback should be function and its Mandatory");
        }

        // Validation for luis_app_id
        if (!options.luis_app_id) {
            if (botcontext.simpledb.botleveldata.config && botcontext.simpledb.botleveldata.config.luis_app_id) {
                option.luis_app_id = botcontext.simpledb.botleveldata.config.luis_app_id;
            } else {
                return botcontext.sendResponse("ERROR : luis_app_id is not set. Please set luis_app_id to options.luis_app_id or context.simpledb.botleveldata.config.luis_app_id");
            }
        }
        // Validation for luis_subscription_key
        if (!options.luis_subscription_key) {
            if (botcontext.simpledb.botleveldata.config && botcontext.simpledb.botleveldata.config.luis_subscription_key) {
                option.luis_subscription_key = botcontext.simpledb.botleveldata.config.luis_subscription_key;
            } else {
                return botcontext.sendResponse("ERROR : luis_subscription_key is not set. Please set luis_subscription_key to options or context.simpledb.botleveldata.config.luis_subscription_key");
            }
        }
        var query = "q=" + encodeURIComponent(message) + "&id=" + options.luis_app_id + "&subscription-key=" + options.luis_subscription_key;
        var luisUrl = "https://api.projectoxford.ai/luis/v1/application?" + query;
        var headers = {};
        botcontext.simplehttp.makeGet(luisUrl, headers, function(context, event) {
            if (event.getresp) {
                var res = utils.parseJson(event.getresp);
                callback(res);
            } else {
                callback({})
            }
        });
    }

    return nlp;

}